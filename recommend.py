"""Recommendation endpoint.

This endpoint accepts a `StudentProfile` in the request body and
returns a ranked list of three career recommendations generated by the
matching engine.  See `docs/MATCHING.md` for details on the scoring
algorithm.
"""
from fastapi import APIRouter, Depends
from sqlmodel import Session, select

from ..deps import get_session
from ..models import Career
from ..schemas import Recommendation, StudentProfile
from ..matching.engine import match_careers

router = APIRouter()


@router.post("/recommend", response_model=list[Recommendation])
def recommend(
    profile: StudentProfile, session: Session = Depends(get_session)
) -> list[Recommendation]:
    """Return the top three recommended careers for the given profile."""
    careers = session.exec(select(Career)).all()
    recommendations = match_careers(profile, careers)
    return recommendations